// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Otomotiv.Infrastructure.Context;

#nullable disable

namespace Otomotiv.Infrastructure.Migrations
{
    [DbContext(typeof(OtomotivDbContext))]
    [Migration("20240920114537_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Otomotiv.Infrastructure.Models.BrandEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "VW",
                            Name = "VolksWagenTicari"
                        },
                        new
                        {
                            Id = 2,
                            Code = "VW",
                            Name = "VolksWagen"
                        },
                        new
                        {
                            Id = 3,
                            Code = "VW",
                            Name = "Turkuaz"
                        },
                        new
                        {
                            Id = 4,
                            Code = "VW",
                            Name = "Skoda"
                        },
                        new
                        {
                            Id = 5,
                            Code = "VW",
                            Name = "Seat"
                        },
                        new
                        {
                            Id = 6,
                            Code = "VW",
                            Name = "Porsche"
                        },
                        new
                        {
                            Id = 7,
                            Code = "VW",
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 8,
                            Code = "VW",
                            Name = "Scania"
                        },
                        new
                        {
                            Id = 9,
                            Code = "VW",
                            Name = "Cupra"
                        },
                        new
                        {
                            Id = 10,
                            Code = "VW",
                            Name = "ScaniaNew"
                        },
                        new
                        {
                            Id = 11,
                            Code = "VW",
                            Name = "DogusOtomotivDaily"
                        },
                        new
                        {
                            Id = 12,
                            Code = "VW",
                            Name = "AutomotiveAccountOperationsUser"
                        });
                });

            modelBuilder.Entity("Otomotiv.Infrastructure.Models.BrandSettingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("integer");

                    b.Property<int?>("ChannelId")
                        .HasColumnType("integer");

                    b.Property<int?>("PlatformId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("PlatformId");

                    b.ToTable("BrandSettings");
                });

            modelBuilder.Entity("Otomotiv.Infrastructure.Models.ChannelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Channels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Web"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mobil"
                        });
                });

            modelBuilder.Entity("Otomotiv.Infrastructure.Models.PlatformEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "VolksWagenTicari"
                        },
                        new
                        {
                            Id = 2,
                            Name = "VolksWagen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Turkuaz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Skoda"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Seat"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Porsche"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Scania"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Cupra"
                        },
                        new
                        {
                            Id = 10,
                            Name = "ScaniaNew"
                        },
                        new
                        {
                            Id = 11,
                            Name = "DogusOtomotivDaily"
                        },
                        new
                        {
                            Id = 12,
                            Name = "AutomotiveAccountOperationsUser"
                        });
                });

            modelBuilder.Entity("Otomotiv.Infrastructure.Models.BrandSettingEntity", b =>
                {
                    b.HasOne("Otomotiv.Infrastructure.Models.BrandEntity", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("Otomotiv.Infrastructure.Models.ChannelEntity", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId");

                    b.HasOne("Otomotiv.Infrastructure.Models.PlatformEntity", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId");

                    b.Navigation("Brand");

                    b.Navigation("Channel");

                    b.Navigation("Platform");
                });
#pragma warning restore 612, 618
        }
    }
}
